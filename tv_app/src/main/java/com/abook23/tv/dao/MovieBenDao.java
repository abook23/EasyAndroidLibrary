package com.abook23.tv.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.abook23.tv.ben.MovieBen;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "MOVIE_BEN".
*/
public class MovieBenDao extends AbstractDao<MovieBen, Long> {

    public static final String TABLENAME = "MOVIE_BEN";

    /**
     * Properties of entity MovieBen.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property V_monthtime = new Property(0, int.class, "v_monthtime", false, "V_MONTHTIME");
        public final static Property V_jq = new Property(1, String.class, "v_jq", false, "V_JQ");
        public final static Property V_monthhit = new Property(2, int.class, "v_monthhit", false, "V_MONTHHIT");
        public final static Property V_digg = new Property(3, int.class, "v_digg", false, "V_DIGG");
        public final static Property V_imdb = new Property(4, double.class, "v_imdb", false, "V_IMDB");
        public final static Property Tid = new Property(5, int.class, "tid", false, "TID");
        public final static Property V_tags = new Property(6, String.class, "v_tags", false, "V_TAGS");
        public final static Property V_dayhit = new Property(7, int.class, "v_dayhit", false, "V_DAYHIT");
        public final static Property V_scorenum = new Property(8, int.class, "v_scorenum", false, "V_SCORENUM");
        public final static Property V_addtime = new Property(9, int.class, "v_addtime", false, "V_ADDTIME");
        public final static Property V_reweek = new Property(10, String.class, "v_reweek", false, "V_REWEEK");
        public final static Property V_rank = new Property(11, int.class, "v_rank", false, "V_RANK");
        public final static Property V_gpic = new Property(12, String.class, "v_gpic", false, "V_GPIC");
        public final static Property V_spic = new Property(13, String.class, "v_spic", false, "V_SPIC");
        public final static Property V_actor = new Property(14, String.class, "v_actor", false, "V_ACTOR");
        public final static Property V_id = new Property(15, long.class, "v_id", true, "_id");
        public final static Property V_score = new Property(16, int.class, "v_score", false, "V_SCORE");
        public final static Property V_color = new Property(17, String.class, "v_color", false, "V_COLOR");
        public final static Property V_publishyear = new Property(18, int.class, "v_publishyear", false, "V_PUBLISHYEAR");
        public final static Property V_mtime = new Property(19, double.class, "v_mtime", false, "V_MTIME");
        public final static Property V_tvs = new Property(20, String.class, "v_tvs", false, "V_TVS");
        public final static Property V_letter = new Property(21, String.class, "v_letter", false, "V_LETTER");
        public final static Property V_commend = new Property(22, int.class, "v_commend", false, "V_COMMEND");
        public final static Property V_enname = new Property(23, String.class, "v_enname", false, "V_ENNAME");
        public final static Property V_state = new Property(24, int.class, "v_state", false, "V_STATE");
        public final static Property V_daytime = new Property(25, int.class, "v_daytime", false, "V_DAYTIME");
        public final static Property V_longtxt = new Property(26, String.class, "v_longtxt", false, "V_LONGTXT");
        public final static Property V_note = new Property(27, String.class, "v_note", false, "V_NOTE");
        public final static Property V_tread = new Property(28, int.class, "v_tread", false, "V_TREAD");
        public final static Property V_money = new Property(29, int.class, "v_money", false, "V_MONEY");
        public final static Property V_wrong = new Property(30, int.class, "v_wrong", false, "V_WRONG");
        public final static Property V_director = new Property(31, String.class, "v_director", false, "V_DIRECTOR");
        public final static Property V_douban = new Property(32, double.class, "v_douban", false, "V_DOUBAN");
        public final static Property V_lang = new Property(33, String.class, "v_lang", false, "V_LANG");
        public final static Property V_weektime = new Property(34, int.class, "v_weektime", false, "V_WEEKTIME");
        public final static Property V_hit = new Property(35, int.class, "v_hit", false, "V_HIT");
        public final static Property V_nickname = new Property(36, String.class, "v_nickname", false, "V_NICKNAME");
        public final static Property V_publisharea = new Property(37, String.class, "v_publisharea", false, "V_PUBLISHAREA");
        public final static Property V_len = new Property(38, String.class, "v_len", false, "V_LEN");
        public final static Property Tname = new Property(39, String.class, "tname", false, "TNAME");
        public final static Property V_total = new Property(40, String.class, "v_total", false, "V_TOTAL");
        public final static Property V_pic = new Property(41, String.class, "v_pic", false, "V_PIC");
        public final static Property V_weekhit = new Property(42, int.class, "v_weekhit", false, "V_WEEKHIT");
        public final static Property V_ismake = new Property(43, int.class, "v_ismake", false, "V_ISMAKE");
        public final static Property V_ver = new Property(44, String.class, "v_ver", false, "V_VER");
        public final static Property V_topic = new Property(45, int.class, "v_topic", false, "V_TOPIC");
        public final static Property V_isunion = new Property(46, int.class, "v_isunion", false, "V_ISUNION");
        public final static Property V_company = new Property(47, String.class, "v_company", false, "V_COMPANY");
        public final static Property V_recycled = new Property(48, int.class, "v_recycled", false, "V_RECYCLED");
        public final static Property V_name = new Property(49, String.class, "v_name", false, "V_NAME");
        public final static Property Body = new Property(50, String.class, "body", false, "BODY");
        public final static Property IsCollect = new Property(51, boolean.class, "isCollect", false, "IS_COLLECT");
        public final static Property IsPlay = new Property(52, boolean.class, "isPlay", false, "IS_PLAY");
    }


    public MovieBenDao(DaoConfig config) {
        super(config);
    }
    
    public MovieBenDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"MOVIE_BEN\" (" + //
                "\"V_MONTHTIME\" INTEGER NOT NULL ," + // 0: v_monthtime
                "\"V_JQ\" TEXT," + // 1: v_jq
                "\"V_MONTHHIT\" INTEGER NOT NULL ," + // 2: v_monthhit
                "\"V_DIGG\" INTEGER NOT NULL ," + // 3: v_digg
                "\"V_IMDB\" REAL NOT NULL ," + // 4: v_imdb
                "\"TID\" INTEGER NOT NULL ," + // 5: tid
                "\"V_TAGS\" TEXT," + // 6: v_tags
                "\"V_DAYHIT\" INTEGER NOT NULL ," + // 7: v_dayhit
                "\"V_SCORENUM\" INTEGER NOT NULL ," + // 8: v_scorenum
                "\"V_ADDTIME\" INTEGER NOT NULL ," + // 9: v_addtime
                "\"V_REWEEK\" TEXT," + // 10: v_reweek
                "\"V_RANK\" INTEGER NOT NULL ," + // 11: v_rank
                "\"V_GPIC\" TEXT," + // 12: v_gpic
                "\"V_SPIC\" TEXT," + // 13: v_spic
                "\"V_ACTOR\" TEXT," + // 14: v_actor
                "\"_id\" INTEGER PRIMARY KEY NOT NULL ," + // 15: v_id
                "\"V_SCORE\" INTEGER NOT NULL ," + // 16: v_score
                "\"V_COLOR\" TEXT," + // 17: v_color
                "\"V_PUBLISHYEAR\" INTEGER NOT NULL ," + // 18: v_publishyear
                "\"V_MTIME\" REAL NOT NULL ," + // 19: v_mtime
                "\"V_TVS\" TEXT," + // 20: v_tvs
                "\"V_LETTER\" TEXT," + // 21: v_letter
                "\"V_COMMEND\" INTEGER NOT NULL ," + // 22: v_commend
                "\"V_ENNAME\" TEXT," + // 23: v_enname
                "\"V_STATE\" INTEGER NOT NULL ," + // 24: v_state
                "\"V_DAYTIME\" INTEGER NOT NULL ," + // 25: v_daytime
                "\"V_LONGTXT\" TEXT," + // 26: v_longtxt
                "\"V_NOTE\" TEXT," + // 27: v_note
                "\"V_TREAD\" INTEGER NOT NULL ," + // 28: v_tread
                "\"V_MONEY\" INTEGER NOT NULL ," + // 29: v_money
                "\"V_WRONG\" INTEGER NOT NULL ," + // 30: v_wrong
                "\"V_DIRECTOR\" TEXT," + // 31: v_director
                "\"V_DOUBAN\" REAL NOT NULL ," + // 32: v_douban
                "\"V_LANG\" TEXT," + // 33: v_lang
                "\"V_WEEKTIME\" INTEGER NOT NULL ," + // 34: v_weektime
                "\"V_HIT\" INTEGER NOT NULL ," + // 35: v_hit
                "\"V_NICKNAME\" TEXT," + // 36: v_nickname
                "\"V_PUBLISHAREA\" TEXT," + // 37: v_publisharea
                "\"V_LEN\" TEXT," + // 38: v_len
                "\"TNAME\" TEXT," + // 39: tname
                "\"V_TOTAL\" TEXT," + // 40: v_total
                "\"V_PIC\" TEXT," + // 41: v_pic
                "\"V_WEEKHIT\" INTEGER NOT NULL ," + // 42: v_weekhit
                "\"V_ISMAKE\" INTEGER NOT NULL ," + // 43: v_ismake
                "\"V_VER\" TEXT," + // 44: v_ver
                "\"V_TOPIC\" INTEGER NOT NULL ," + // 45: v_topic
                "\"V_ISUNION\" INTEGER NOT NULL ," + // 46: v_isunion
                "\"V_COMPANY\" TEXT," + // 47: v_company
                "\"V_RECYCLED\" INTEGER NOT NULL ," + // 48: v_recycled
                "\"V_NAME\" TEXT," + // 49: v_name
                "\"BODY\" TEXT," + // 50: body
                "\"IS_COLLECT\" INTEGER NOT NULL ," + // 51: isCollect
                "\"IS_PLAY\" INTEGER NOT NULL );"); // 52: isPlay
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"MOVIE_BEN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, MovieBen entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getV_monthtime());
 
        String v_jq = entity.getV_jq();
        if (v_jq != null) {
            stmt.bindString(2, v_jq);
        }
        stmt.bindLong(3, entity.getV_monthhit());
        stmt.bindLong(4, entity.getV_digg());
        stmt.bindDouble(5, entity.getV_imdb());
        stmt.bindLong(6, entity.getTid());
 
        String v_tags = entity.getV_tags();
        if (v_tags != null) {
            stmt.bindString(7, v_tags);
        }
        stmt.bindLong(8, entity.getV_dayhit());
        stmt.bindLong(9, entity.getV_scorenum());
        stmt.bindLong(10, entity.getV_addtime());
 
        String v_reweek = entity.getV_reweek();
        if (v_reweek != null) {
            stmt.bindString(11, v_reweek);
        }
        stmt.bindLong(12, entity.getV_rank());
 
        String v_gpic = entity.getV_gpic();
        if (v_gpic != null) {
            stmt.bindString(13, v_gpic);
        }
 
        String v_spic = entity.getV_spic();
        if (v_spic != null) {
            stmt.bindString(14, v_spic);
        }
 
        String v_actor = entity.getV_actor();
        if (v_actor != null) {
            stmt.bindString(15, v_actor);
        }
        stmt.bindLong(16, entity.getV_id());
        stmt.bindLong(17, entity.getV_score());
 
        String v_color = entity.getV_color();
        if (v_color != null) {
            stmt.bindString(18, v_color);
        }
        stmt.bindLong(19, entity.getV_publishyear());
        stmt.bindDouble(20, entity.getV_mtime());
 
        String v_tvs = entity.getV_tvs();
        if (v_tvs != null) {
            stmt.bindString(21, v_tvs);
        }
 
        String v_letter = entity.getV_letter();
        if (v_letter != null) {
            stmt.bindString(22, v_letter);
        }
        stmt.bindLong(23, entity.getV_commend());
 
        String v_enname = entity.getV_enname();
        if (v_enname != null) {
            stmt.bindString(24, v_enname);
        }
        stmt.bindLong(25, entity.getV_state());
        stmt.bindLong(26, entity.getV_daytime());
 
        String v_longtxt = entity.getV_longtxt();
        if (v_longtxt != null) {
            stmt.bindString(27, v_longtxt);
        }
 
        String v_note = entity.getV_note();
        if (v_note != null) {
            stmt.bindString(28, v_note);
        }
        stmt.bindLong(29, entity.getV_tread());
        stmt.bindLong(30, entity.getV_money());
        stmt.bindLong(31, entity.getV_wrong());
 
        String v_director = entity.getV_director();
        if (v_director != null) {
            stmt.bindString(32, v_director);
        }
        stmt.bindDouble(33, entity.getV_douban());
 
        String v_lang = entity.getV_lang();
        if (v_lang != null) {
            stmt.bindString(34, v_lang);
        }
        stmt.bindLong(35, entity.getV_weektime());
        stmt.bindLong(36, entity.getV_hit());
 
        String v_nickname = entity.getV_nickname();
        if (v_nickname != null) {
            stmt.bindString(37, v_nickname);
        }
 
        String v_publisharea = entity.getV_publisharea();
        if (v_publisharea != null) {
            stmt.bindString(38, v_publisharea);
        }
 
        String v_len = entity.getV_len();
        if (v_len != null) {
            stmt.bindString(39, v_len);
        }
 
        String tname = entity.getTname();
        if (tname != null) {
            stmt.bindString(40, tname);
        }
 
        String v_total = entity.getV_total();
        if (v_total != null) {
            stmt.bindString(41, v_total);
        }
 
        String v_pic = entity.getV_pic();
        if (v_pic != null) {
            stmt.bindString(42, v_pic);
        }
        stmt.bindLong(43, entity.getV_weekhit());
        stmt.bindLong(44, entity.getV_ismake());
 
        String v_ver = entity.getV_ver();
        if (v_ver != null) {
            stmt.bindString(45, v_ver);
        }
        stmt.bindLong(46, entity.getV_topic());
        stmt.bindLong(47, entity.getV_isunion());
 
        String v_company = entity.getV_company();
        if (v_company != null) {
            stmt.bindString(48, v_company);
        }
        stmt.bindLong(49, entity.getV_recycled());
 
        String v_name = entity.getV_name();
        if (v_name != null) {
            stmt.bindString(50, v_name);
        }
 
        String body = entity.getBody();
        if (body != null) {
            stmt.bindString(51, body);
        }
        stmt.bindLong(52, entity.getIsCollect() ? 1L: 0L);
        stmt.bindLong(53, entity.getIsPlay() ? 1L: 0L);
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, MovieBen entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getV_monthtime());
 
        String v_jq = entity.getV_jq();
        if (v_jq != null) {
            stmt.bindString(2, v_jq);
        }
        stmt.bindLong(3, entity.getV_monthhit());
        stmt.bindLong(4, entity.getV_digg());
        stmt.bindDouble(5, entity.getV_imdb());
        stmt.bindLong(6, entity.getTid());
 
        String v_tags = entity.getV_tags();
        if (v_tags != null) {
            stmt.bindString(7, v_tags);
        }
        stmt.bindLong(8, entity.getV_dayhit());
        stmt.bindLong(9, entity.getV_scorenum());
        stmt.bindLong(10, entity.getV_addtime());
 
        String v_reweek = entity.getV_reweek();
        if (v_reweek != null) {
            stmt.bindString(11, v_reweek);
        }
        stmt.bindLong(12, entity.getV_rank());
 
        String v_gpic = entity.getV_gpic();
        if (v_gpic != null) {
            stmt.bindString(13, v_gpic);
        }
 
        String v_spic = entity.getV_spic();
        if (v_spic != null) {
            stmt.bindString(14, v_spic);
        }
 
        String v_actor = entity.getV_actor();
        if (v_actor != null) {
            stmt.bindString(15, v_actor);
        }
        stmt.bindLong(16, entity.getV_id());
        stmt.bindLong(17, entity.getV_score());
 
        String v_color = entity.getV_color();
        if (v_color != null) {
            stmt.bindString(18, v_color);
        }
        stmt.bindLong(19, entity.getV_publishyear());
        stmt.bindDouble(20, entity.getV_mtime());
 
        String v_tvs = entity.getV_tvs();
        if (v_tvs != null) {
            stmt.bindString(21, v_tvs);
        }
 
        String v_letter = entity.getV_letter();
        if (v_letter != null) {
            stmt.bindString(22, v_letter);
        }
        stmt.bindLong(23, entity.getV_commend());
 
        String v_enname = entity.getV_enname();
        if (v_enname != null) {
            stmt.bindString(24, v_enname);
        }
        stmt.bindLong(25, entity.getV_state());
        stmt.bindLong(26, entity.getV_daytime());
 
        String v_longtxt = entity.getV_longtxt();
        if (v_longtxt != null) {
            stmt.bindString(27, v_longtxt);
        }
 
        String v_note = entity.getV_note();
        if (v_note != null) {
            stmt.bindString(28, v_note);
        }
        stmt.bindLong(29, entity.getV_tread());
        stmt.bindLong(30, entity.getV_money());
        stmt.bindLong(31, entity.getV_wrong());
 
        String v_director = entity.getV_director();
        if (v_director != null) {
            stmt.bindString(32, v_director);
        }
        stmt.bindDouble(33, entity.getV_douban());
 
        String v_lang = entity.getV_lang();
        if (v_lang != null) {
            stmt.bindString(34, v_lang);
        }
        stmt.bindLong(35, entity.getV_weektime());
        stmt.bindLong(36, entity.getV_hit());
 
        String v_nickname = entity.getV_nickname();
        if (v_nickname != null) {
            stmt.bindString(37, v_nickname);
        }
 
        String v_publisharea = entity.getV_publisharea();
        if (v_publisharea != null) {
            stmt.bindString(38, v_publisharea);
        }
 
        String v_len = entity.getV_len();
        if (v_len != null) {
            stmt.bindString(39, v_len);
        }
 
        String tname = entity.getTname();
        if (tname != null) {
            stmt.bindString(40, tname);
        }
 
        String v_total = entity.getV_total();
        if (v_total != null) {
            stmt.bindString(41, v_total);
        }
 
        String v_pic = entity.getV_pic();
        if (v_pic != null) {
            stmt.bindString(42, v_pic);
        }
        stmt.bindLong(43, entity.getV_weekhit());
        stmt.bindLong(44, entity.getV_ismake());
 
        String v_ver = entity.getV_ver();
        if (v_ver != null) {
            stmt.bindString(45, v_ver);
        }
        stmt.bindLong(46, entity.getV_topic());
        stmt.bindLong(47, entity.getV_isunion());
 
        String v_company = entity.getV_company();
        if (v_company != null) {
            stmt.bindString(48, v_company);
        }
        stmt.bindLong(49, entity.getV_recycled());
 
        String v_name = entity.getV_name();
        if (v_name != null) {
            stmt.bindString(50, v_name);
        }
 
        String body = entity.getBody();
        if (body != null) {
            stmt.bindString(51, body);
        }
        stmt.bindLong(52, entity.getIsCollect() ? 1L: 0L);
        stmt.bindLong(53, entity.getIsPlay() ? 1L: 0L);
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 15);
    }    

    @Override
    public MovieBen readEntity(Cursor cursor, int offset) {
        MovieBen entity = new MovieBen( //
            cursor.getInt(offset + 0), // v_monthtime
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // v_jq
            cursor.getInt(offset + 2), // v_monthhit
            cursor.getInt(offset + 3), // v_digg
            cursor.getDouble(offset + 4), // v_imdb
            cursor.getInt(offset + 5), // tid
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // v_tags
            cursor.getInt(offset + 7), // v_dayhit
            cursor.getInt(offset + 8), // v_scorenum
            cursor.getInt(offset + 9), // v_addtime
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // v_reweek
            cursor.getInt(offset + 11), // v_rank
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // v_gpic
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // v_spic
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // v_actor
            cursor.getLong(offset + 15), // v_id
            cursor.getInt(offset + 16), // v_score
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // v_color
            cursor.getInt(offset + 18), // v_publishyear
            cursor.getDouble(offset + 19), // v_mtime
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // v_tvs
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // v_letter
            cursor.getInt(offset + 22), // v_commend
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // v_enname
            cursor.getInt(offset + 24), // v_state
            cursor.getInt(offset + 25), // v_daytime
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // v_longtxt
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // v_note
            cursor.getInt(offset + 28), // v_tread
            cursor.getInt(offset + 29), // v_money
            cursor.getInt(offset + 30), // v_wrong
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // v_director
            cursor.getDouble(offset + 32), // v_douban
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // v_lang
            cursor.getInt(offset + 34), // v_weektime
            cursor.getInt(offset + 35), // v_hit
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // v_nickname
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // v_publisharea
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // v_len
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // tname
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // v_total
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // v_pic
            cursor.getInt(offset + 42), // v_weekhit
            cursor.getInt(offset + 43), // v_ismake
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // v_ver
            cursor.getInt(offset + 45), // v_topic
            cursor.getInt(offset + 46), // v_isunion
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // v_company
            cursor.getInt(offset + 48), // v_recycled
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // v_name
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // body
            cursor.getShort(offset + 51) != 0, // isCollect
            cursor.getShort(offset + 52) != 0 // isPlay
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, MovieBen entity, int offset) {
        entity.setV_monthtime(cursor.getInt(offset + 0));
        entity.setV_jq(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setV_monthhit(cursor.getInt(offset + 2));
        entity.setV_digg(cursor.getInt(offset + 3));
        entity.setV_imdb(cursor.getDouble(offset + 4));
        entity.setTid(cursor.getInt(offset + 5));
        entity.setV_tags(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setV_dayhit(cursor.getInt(offset + 7));
        entity.setV_scorenum(cursor.getInt(offset + 8));
        entity.setV_addtime(cursor.getInt(offset + 9));
        entity.setV_reweek(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setV_rank(cursor.getInt(offset + 11));
        entity.setV_gpic(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setV_spic(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setV_actor(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setV_id(cursor.getLong(offset + 15));
        entity.setV_score(cursor.getInt(offset + 16));
        entity.setV_color(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setV_publishyear(cursor.getInt(offset + 18));
        entity.setV_mtime(cursor.getDouble(offset + 19));
        entity.setV_tvs(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setV_letter(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setV_commend(cursor.getInt(offset + 22));
        entity.setV_enname(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setV_state(cursor.getInt(offset + 24));
        entity.setV_daytime(cursor.getInt(offset + 25));
        entity.setV_longtxt(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setV_note(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setV_tread(cursor.getInt(offset + 28));
        entity.setV_money(cursor.getInt(offset + 29));
        entity.setV_wrong(cursor.getInt(offset + 30));
        entity.setV_director(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setV_douban(cursor.getDouble(offset + 32));
        entity.setV_lang(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setV_weektime(cursor.getInt(offset + 34));
        entity.setV_hit(cursor.getInt(offset + 35));
        entity.setV_nickname(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setV_publisharea(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setV_len(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setTname(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setV_total(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setV_pic(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setV_weekhit(cursor.getInt(offset + 42));
        entity.setV_ismake(cursor.getInt(offset + 43));
        entity.setV_ver(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setV_topic(cursor.getInt(offset + 45));
        entity.setV_isunion(cursor.getInt(offset + 46));
        entity.setV_company(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setV_recycled(cursor.getInt(offset + 48));
        entity.setV_name(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setBody(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setIsCollect(cursor.getShort(offset + 51) != 0);
        entity.setIsPlay(cursor.getShort(offset + 52) != 0);
     }
    
    @Override
    protected final Long updateKeyAfterInsert(MovieBen entity, long rowId) {
        entity.setV_id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(MovieBen entity) {
        if(entity != null) {
            return entity.getV_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(MovieBen entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
